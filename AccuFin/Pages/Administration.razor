@page "/administration"
@page "/administration/{Id:guid}"


<EditModelComponent
                    ModelType="AdministrationModel"
                    OnGetModel="GetModelAsync"
                    OnDeleteModel="DeleteModelAsync"
                    OnGetObjectToDeleteDescription="@((model)=> model.Name)"
                    NavigateToAfterDelete="/administrations"
                    OnSaveValidModel="OnSave"
                    OnlyOnce="true">
    <MudTextField Label="Naam"
                  @bind-Value="context.Name" For="@(() => context.Name)" />
    <MudTextField Label="Kvknummer" Class="mt-3"
                  @bind-Value="context.AdministrationRegistryCode" For="@(() =>context.AdministrationRegistryCode)" />
    <MudTextField Label="Telefoon" Class="mt-3"
                  @bind-Value="context.TelephoneNumber" For="@(() =>context.TelephoneNumber)" />
    <MudTextField Label="Email" Class="mt-3"
                  @bind-Value="context.EmailAdress" For="@(() =>context.EmailAdress)" />
</EditModelComponent>

@code {
    [Inject]
    public AdministrationClient AdministrationClient { get; set; }

    [Parameter]
    public Guid Id { get; set; }

    public MudForm Form { get; set; }

    public async Task<InitializeEditFormResult<AdministrationModel>> GetModelAsync()
    {
        if (Id == Guid.Empty)
        {
            return new InitializeEditFormResult<AdministrationModel>(new AdministrationModel(), null);
        }
        else
        {
            var response = await AdministrationClient.GetAdministrationByIdAsync(Id);
            if (response.Success)
            {
                return new InitializeEditFormResult<AdministrationModel>(response.Data, response);
            }
            else
            {
                return new InitializeEditFormResult<AdministrationModel>(null, response);
            }
        }
    }

    private async Task<Response<bool>> DeleteModelAsync(AdministrationModel model)
    {
        return await AdministrationClient.DeleteAdministrationAsync(model.Id);
    }

    private async Task<Response<AdministrationModel, List<ValidationError>>> OnSave(AdministrationModel model)
    {
        if (Id == Guid.Empty)
        {
            return await AdministrationClient.AddAdministrationAsync(model);
        }
        else
        {
            return await AdministrationClient.UpdateAdministrationAsync(model);
        }
    }
}
