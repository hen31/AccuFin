@page "/administrations"



<MudDataGrid @ref="_grid" T="AdministrationCollectionItem"
             ServerData="@(new Func<GridState<AdministrationCollectionItem>, Task<GridData<AdministrationCollectionItem>>>(ServerReload))"
             SortMode="SortMode.None" Filterable="false" Loading="true">
    <LoadingContent>
        <MudProgressCircular Indeterminate="true" />
    </LoadingContent>
    <ToolBarContent>
        <MudText Typo="Typo.h6">Administraties</MudText>
        <MudSpacer />
        <MudButton Href="/administration">Toevoegen</MudButton>
    </ToolBarContent>
    <Columns>
        <PropertyColumn Property="x => x.Id" Title="Id" />
        <PropertyColumn Property="x => x.Name" Title="Naam" />
    </Columns>
    <PagerContent>
        <MudDataGridPager T="AdministrationCollectionItem" PageSizeOptions="@(new int[]{5, 10, 15, 20})" />
    </PagerContent>
</MudDataGrid>

@code {

    [Inject]
    public AdministrationClient AdministrationClient { get; set; }

    private MudDataGrid<AdministrationCollectionItem> _grid;

    protected override async Task OnInitializedAsync()
    {


    }

    private async Task<GridData<AdministrationCollectionItem>> ServerReload(GridState<AdministrationCollectionItem> state)
    {
        var response = await AdministrationClient.GetAdministrations(state.Page + 1, state.PageSize);
        var gridData = new GridData<AdministrationCollectionItem>();
        if (response.Success)
        {
            gridData.TotalItems = response.Data.Count;
            gridData.Items = response.Data.Items;
        }
        return gridData;
    }

}
